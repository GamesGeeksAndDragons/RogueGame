namespace AssetsTests.MazeTests.Helpers
{
    internal static class OneConnectingLineTestDefinitions
    {
        class Test1 : TwoDoorConnectingTests
        {
            protected override string Start => @"
██████████████████
██████████████████
██████████████████
███╔═╗██████╔═╗███
███║ ║██████║ ║███
███╚1╝██████╚2╝███
██████████████████
██████████████████
██████████████████
███╔1╗██████╔2╗███
███║ ║██████║ ║███
███╚═╝██████╚═╝███
██████████████████
██████████████████
██████████████████
";

            protected override string Expected => @"
  |012345678901234567
---------------------
0 |██████████████████
1 |██████████████████
2 |██████████████████
3 |███╔═╗██████╔═╗███
4 |███║ ║██████║ ║███
5 |███╚1╝██████╚2╝███
6 |████ ████████ ████
7 |████ ████████ ████
8 |████ ████████ ████
9 |███╔1╗██████╔2╗███
10|███║ ║██████║ ║███
11|███╚═╝██████╚═╝███
12|██████████████████
13|██████████████████
14|██████████████████
";
        }

        class Test2 : TwoDoorConnectingTests
        {
            protected override string Start => @"
██████████████████
██████████████████
██████████████████
███╔═╗██████╔═╗███
███║ 1██████1 ║███
███╚═╝██████╚═╝███
██████████████████
██████████████████
██████████████████
███╔═╗██████╔═╗███
███║ 2██████2 ║███
███╚═╝██████╚═╝███
██████████████████
██████████████████
██████████████████
";

            protected override string Expected =>
@"  |012345678901234567
---------------------
0 |██████████████████
1 |██████████████████
2 |██████████████████
3 |███╔═╗██████╔═╗███
4 |███║ 1      1 ║███
5 |███╚═╝██████╚═╝███
6 |██████████████████
7 |██████████████████
8 |██████████████████
9 |███╔═╗██████╔═╗███
10|███║ 2      2 ║███
11|███╚═╝██████╚═╝███
12|██████████████████
13|██████████████████
14|██████████████████";
        }

        internal static ITwoDoorConnectingTests GetExpectations(int testNumber)
        {
            switch (testNumber)
            {
                case 1: return new Test1();
                case 2: return new Test2();
            }

            TestHelper.ThrowUnknownTest(testNumber);
            return null;
        }
    }
}
